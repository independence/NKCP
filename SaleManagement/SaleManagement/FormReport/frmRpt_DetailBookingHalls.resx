<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picLogo.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        DjhmYCZdAAAAAElFTkSuQmCC
</value>
  </data>
</root>