<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="xrPictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        /A9EAw44RZLc2wAAAABJRU5ErkJggg==
</value>
  </data>
</root>